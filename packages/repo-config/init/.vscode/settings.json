{
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    ".env": ".env.*",
    "package.json": ".*.cjs, .*.js, .*.json, .*.mjs, .*.toml, .*.ts, .*.yaml, .*.yml, .*ignore, .*rc, *config.cjs, *config.js, *config.json, *config.mjs, *config.toml, *config.ts, *config.yaml, *config.yml, .editorconfig, lerna.json, netlify.toml, package-lock.json, , pnpm*, turbo.json, vercel.json, workspace*, wrangler.toml, yarn.lock, yarn*",
    "readme.md": "authors*, backers*, changelog*, citation*, code_of_conduct*, contributing*, contributors*, copying*, credits*, governance*, history*, license*, maintainers*, release_notes*, security*, sponsors*",
    "composer.json": "composer.lock"
  },
  "tailwindCSS.experimental.classRegex": [
    // Matches JavaScript classList API methods (add, remove, toggle)
    // Example: element.classList.add('px-4 py-2')
    ["classList.(?:add|remove|toggle)\\(([^)]*)\\)", "(?:'|\"|`)([^\"'`]*)(?:'|\"|`)"],

    // Matches Twig variable assignments ending with "class" or "classes" (case insensitive)
    // Example: {% set buttonClasses = "bg-blue-500 hover:bg-blue-700" %}
    ["{%\\s+set\\s+.*[Cc]lass(?:es)?\\s+=\\s+['\"](.*)['\"]\\s+%}"],

    // Matches properties ending with "class" or "classes" (case insensitive) in objects/configs
    // Example: buttonClass: "text-white font-bold"
    ["[a-zA-Z0-9]*[Cc]lass(?:es)?:\\s*['\"](.*)['\"]"],

    // Matches class definitions within a "classes" object structure
    // Example: classes: { root: "flex items-center", item: "px-4" }
    ["classes:\\s*{([^}]*?)}", ":\\s*['\"]([^'\"]*)['\"]"],

    // Matches class strings within twMerge() function calls
    // Example: twMerge("flex items-center p-4")
    ["twMerge\\(['\"]([^'\"]*)['\"]", "([^']*)"]
  ],
  "tailwindCSS.classAttributes": [".*Class.*"],
  "[twig]": {
    "editor.suggest.snippetsPreventQuickSuggestions": true
  }
}
